# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'uiv2.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import os
import configparser
import webbrowser
import pyaudio
config = configparser.ConfigParser()
config.read("config.ini", 'utf-8')

class Ui_Masha(object):
    def setupUi(self, Masha):
        Masha.setObjectName("Masha")
        Masha.resize(528, 301)
        Masha.setMinimumSize(QtCore.QSize(528, 301))
        Masha.setMaximumSize(QtCore.QSize(528, 301))
        self.horizontalLayout = QtWidgets.QHBoxLayout(Masha)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Tab = QtWidgets.QTabWidget(Masha)
        self.Tab.setTabPosition(QtWidgets.QTabWidget.North)
        self.Tab.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.Tab.setObjectName("Tab")
        self.mainTab = QtWidgets.QWidget()
        self.mainTab.setObjectName("mainTab")
        self.startBtn = QtWidgets.QPushButton(self.mainTab)
        self.startBtn.setGeometry(QtCore.QRect(10, 10, 111, 241))
        self.startBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.startBtn.setObjectName("startBtn")
        self.label = QtWidgets.QLabel(self.mainTab)
        self.label.setGeometry(QtCore.QRect(130, 10, 341, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(36)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.mainTab)
        self.label_2.setGeometry(QtCore.QRect(130, 60, 151, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.mainTab)
        self.pushButton.setGeometry(QtCore.QRect(420, 220, 75, 31))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setUnderline(True)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setObjectName("pushButton")
        self.Tab.addTab(self.mainTab, "")
        self.settingsTab = QtWidgets.QWidget()
        self.settingsTab.setObjectName("settingsTab")
        self.micIndex = QtWidgets.QComboBox(self.settingsTab)
        self.micIndex.setGeometry(QtCore.QRect(10, 10, 481, 20))
        self.micIndex.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.micIndex.setEditable(False)
        self.micIndex.setCurrentText("")
        self.micIndex.setDuplicatesEnabled(False)
        self.micIndex.setObjectName("micIndex")
        self.Tab.addTab(self.settingsTab, "")
        self.funcTab = QtWidgets.QWidget()
        self.funcTab.setObjectName("funcTab")
        self.siteOn = QtWidgets.QCheckBox(self.funcTab)
        self.siteOn.setGeometry(QtCore.QRect(10, 10, 111, 17))
        self.siteOn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.siteOn.setChecked(False)
        self.siteOn.setObjectName("siteOn")
        self.searchOn = QtWidgets.QCheckBox(self.funcTab)
        self.searchOn.setGeometry(QtCore.QRect(10, 30, 111, 17))
        self.searchOn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchOn.setChecked(False)
        self.searchOn.setObjectName("searchOn")
        self.alarmOn = QtWidgets.QCheckBox(self.funcTab)
        self.alarmOn.setGeometry(QtCore.QRect(10, 230, 191, 17))
        self.alarmOn.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.alarmOn.setAcceptDrops(False)
        self.alarmOn.setAutoFillBackground(False)
        self.alarmOn.setCheckable(False)
        self.alarmOn.setTristate(False)
        self.alarmOn.setObjectName("alarmOn")
        self.calcOn = QtWidgets.QCheckBox(self.funcTab)
        self.calcOn.setGeometry(QtCore.QRect(10, 50, 111, 17))
        self.calcOn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.calcOn.setChecked(False)
        self.calcOn.setObjectName("calcOn")
        self.offcompOn = QtWidgets.QCheckBox(self.funcTab)
        self.offcompOn.setGeometry(QtCore.QRect(10, 70, 151, 17))
        self.offcompOn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.offcompOn.setChecked(False)
        self.offcompOn.setObjectName("offcompOn")
        self.Tab.addTab(self.funcTab, "")
        self.horizontalLayout.addWidget(self.Tab)

        self.retranslateUi(Masha)
        self.Tab.setCurrentIndex(0)
        self.micIndex.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(Masha)

    def retranslateUi(self, Masha):
        _translate = QtCore.QCoreApplication.translate
        Masha.setWindowTitle(_translate("Masha", "Голосовой ассистент Маша"))
        Masha.setWindowIcon(QtGui.QIcon('icon.ico'))
        self.startBtn.setText(_translate("Masha", "Запустить"))
        self.label.setText(_translate("Masha", "Ассистент Маша"))
        self.label_2.setText(_translate("Masha", "Создатель / Creator: cl0vvn_"))
        self.pushButton.setText(_translate("Masha", "Github"))
        self.Tab.setTabText(self.Tab.indexOf(self.mainTab), _translate("Masha", "Главная"))
        self.micIndex.setPlaceholderText(_translate("Masha", "Ваш  микрофон"))
        self.Tab.setTabText(self.Tab.indexOf(self.settingsTab), _translate("Masha", "Настройки"))
        self.siteOn.setText(_translate("Masha", "Открытие сайтов"))
        self.searchOn.setText(_translate("Masha", "Поиск в браузере"))
        self.alarmOn.setText(_translate("Masha", "Будильник (ВРЕМЕННО ВЫРЕЗАН)"))
        self.calcOn.setText(_translate("Masha", "Счет"))
        self.offcompOn.setText(_translate("Masha", "Выключение компьютера"))
        self.Tab.setTabText(self.Tab.indexOf(self.funcTab), _translate("Masha", "Функции"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Masha = QtWidgets.QWidget()
    ui = Ui_Masha()
    ui.setupUi(Masha)
    Masha.show()

    
    ui.calcOn.setChecked(config.getboolean('Funcs','calcOn'))
    ui.searchOn.setChecked(config.getboolean('Funcs','searchOn'))
    ui.offcompOn.setChecked(config.getboolean('Funcs','shutdownOn'))
    ui.siteOn.setChecked(config.getboolean('Funcs','siteOn'))

    p = pyaudio.PyAudio()
    info = p.get_host_api_info_by_index(0)
    numdevices = info.get('deviceCount')
    for i in range(0, numdevices):
         if (p.get_device_info_by_host_api_device_index(0, i).get('maxInputChannels')) > 0:
                ui.micIndex.addItem(p.get_device_info_by_host_api_device_index(0, i).get('name'))

    def indexasd():
        config['System']['microphone_index'] = str(ui.micIndex.currentIndex())
        with open('config.ini', 'w') as configfile:
            config.write(configfile)

    ui.micIndex.currentIndexChanged.connect(indexasd)


    def startAssistant():
        os.system('start main.py')
    def githubOpen():
        webbrowser.open_new('https://github.com/cl0vvn/masha/')
    def settingsImport(checkbox):
        if checkbox == 'calcOn':
            config['Funcs']['calcOn'] = str(ui.calcOn.isChecked())
            with open('config.ini', 'w') as configfile:
                config.write(configfile)
        elif checkbox == 'searchOn':
            config['Funcs']['searchOn'] = str(ui.searchOn.isChecked())
            with open('config.ini', 'w') as configfile:
                config.write(configfile)
        elif checkbox == 'offcompOn':
            config['Funcs']['shutdownOn'] = str(ui.offcompOn.isChecked())
            with open('config.ini', 'w') as configfile:
                config.write(configfile)
        elif checkbox == 'siteOn':
            config['Funcs']['siteOn'] = str(ui.siteOn.isChecked())
            with open('config.ini', 'w') as configfile:
                config.write(configfile)
        
    ui.startBtn.clicked.connect(startAssistant)
    ui.pushButton.clicked.connect(githubOpen)

    #Settings Auto - Export
    ui.calcOn.stateChanged.connect(lambda:settingsImport('calcOn'))
    ui.siteOn.stateChanged.connect(lambda:settingsImport('siteOn'))
    ui.offcompOn.stateChanged.connect(lambda:settingsImport('offcompOn'))
    ui.searchOn.stateChanged.connect(lambda:settingsImport('searchOn'))

    sys.exit(app.exec_())
